digraph AST{
0[label="goal
classBubbleSort{publicstaticvoidmain(String[]a){System.out.println(newBBS().Start(10));}}classBBS{int[]number;intsize;publicintStart(intsz){intaux01;aux01=this.Init(sz);aux01=this.Print();System.out.println(99999);aux01=this.Sort();aux01=this.Print();return0;}publicintSort(){intnt;inti;intaux02;intaux04;intaux05;intaux06;intaux07;intj;intt;i=size-1;aux02=0-1;while(aux02<i){j=1;while(j<(i+1)){aux07=j-1;aux04=number[aux07];aux05=number[j];if(aux05<aux04){aux06=j-1;t=number[aux06];number[aux06]=number[j];number[j]=t;}elsent=0;j=j+1;}i=i-1;}return0;}publicintPrint(){intj;j=0;while(j<(size)){System.out.println(number[j]);j=j+1;}return0;}publicintInit(intsz){size=sz;number=newint[sz];number[0]=20;number[1]=7;number[2]=12;number[3]=18;number[4]=2;number[5]=11;number[6]=6;number[7]=9;number[8]=19;number[9]=5;return0;}}<EOF>"]
00[label="mainClass
classBubbleSort{publicstaticvoidmain(String[]a){System.out.println(newBBS().Start(10));}}"]
0->00
000[label="Identifier
BubbleSort"]
00->000
001[label="Identifier
a"]
00->001
002[label="statement
System.out.println(newBBS().Start(10));"]
00->002
0020[label="expression
newBBS().Start(10)"]
002->0020
00200[label="expression
newBBS()"]
0020->00200
002000[label="Identifier
BBS"]
00200->002000
00201[label="Identifier
Start"]
0020->00201
00202[label="expression
10"]
0020->00202
002020[label="INT
10"]
00202->002020
01[label="classDeclaration
classBBS{int[]number;intsize;publicintStart(intsz){intaux01;aux01=this.Init(sz);aux01=this.Print();System.out.println(99999);aux01=this.Sort();aux01=this.Print();return0;}publicintSort(){intnt;inti;intaux02;intaux04;intaux05;intaux06;intaux07;intj;intt;i=size-1;aux02=0-1;while(aux02<i){j=1;while(j<(i+1)){aux07=j-1;aux04=number[aux07];aux05=number[j];if(aux05<aux04){aux06=j-1;t=number[aux06];number[aux06]=number[j];number[j]=t;}elsent=0;j=j+1;}i=i-1;}return0;}publicintPrint(){intj;j=0;while(j<(size)){System.out.println(number[j]);j=j+1;}return0;}publicintInit(intsz){size=sz;number=newint[sz];number[0]=20;number[1]=7;number[2]=12;number[3]=18;number[4]=2;number[5]=11;number[6]=6;number[7]=9;number[8]=19;number[9]=5;return0;}}"]
0->01
010[label="Identifier
BBS"]
01->010
011[label="varDeclaration
int[]number;"]
01->011
0110[label="type
int[]"]
011->0110
0111[label="Identifier
number"]
011->0111
012[label="varDeclaration
intsize;"]
01->012
0120[label="type
int"]
012->0120
0121[label="Identifier
size"]
012->0121
013[label="methodDeclaration
publicintStart(intsz){intaux01;aux01=this.Init(sz);aux01=this.Print();System.out.println(99999);aux01=this.Sort();aux01=this.Print();return0;}"]
01->013
0130[label="type
int"]
013->0130
0131[label="Identifier
Start"]
013->0131
0132[label="type
int"]
013->0132
0133[label="Identifier
sz"]
013->0133
0134[label="varDeclaration
intaux01;"]
013->0134
01340[label="type
int"]
0134->01340
01341[label="Identifier
aux01"]
0134->01341
0135[label="statement
aux01=this.Init(sz);"]
013->0135
01350[label="Identifier
aux01"]
0135->01350
01351[label="expression
this.Init(sz)"]
0135->01351
013510[label="expression
this"]
01351->013510
013511[label="Identifier
Init"]
01351->013511
013512[label="expression
sz"]
01351->013512
0135120[label="Identifier
sz"]
013512->0135120
0136[label="statement
aux01=this.Print();"]
013->0136
01360[label="Identifier
aux01"]
0136->01360
01361[label="expression
this.Print()"]
0136->01361
013610[label="expression
this"]
01361->013610
013611[label="Identifier
Print"]
01361->013611
0137[label="statement
System.out.println(99999);"]
013->0137
01370[label="expression
99999"]
0137->01370
013700[label="INT
99999"]
01370->013700
0138[label="statement
aux01=this.Sort();"]
013->0138
01380[label="Identifier
aux01"]
0138->01380
01381[label="expression
this.Sort()"]
0138->01381
013810[label="expression
this"]
01381->013810
013811[label="Identifier
Sort"]
01381->013811
0139[label="statement
aux01=this.Print();"]
013->0139
01390[label="Identifier
aux01"]
0139->01390
01391[label="expression
this.Print()"]
0139->01391
013910[label="expression
this"]
01391->013910
013911[label="Identifier
Print"]
01391->013911
01310[label="expression
0"]
013->01310
013100[label="INT
0"]
01310->013100
014[label="methodDeclaration
publicintSort(){intnt;inti;intaux02;intaux04;intaux05;intaux06;intaux07;intj;intt;i=size-1;aux02=0-1;while(aux02<i){j=1;while(j<(i+1)){aux07=j-1;aux04=number[aux07];aux05=number[j];if(aux05<aux04){aux06=j-1;t=number[aux06];number[aux06]=number[j];number[j]=t;}elsent=0;j=j+1;}i=i-1;}return0;}"]
01->014
0140[label="type
int"]
014->0140
0141[label="Identifier
Sort"]
014->0141
0142[label="varDeclaration
intnt;"]
014->0142
01420[label="type
int"]
0142->01420
01421[label="Identifier
nt"]
0142->01421
0143[label="varDeclaration
inti;"]
014->0143
01430[label="type
int"]
0143->01430
01431[label="Identifier
i"]
0143->01431
0144[label="varDeclaration
intaux02;"]
014->0144
01440[label="type
int"]
0144->01440
01441[label="Identifier
aux02"]
0144->01441
0145[label="varDeclaration
intaux04;"]
014->0145
01450[label="type
int"]
0145->01450
01451[label="Identifier
aux04"]
0145->01451
0146[label="varDeclaration
intaux05;"]
014->0146
01460[label="type
int"]
0146->01460
01461[label="Identifier
aux05"]
0146->01461
0147[label="varDeclaration
intaux06;"]
014->0147
01470[label="type
int"]
0147->01470
01471[label="Identifier
aux06"]
0147->01471
0148[label="varDeclaration
intaux07;"]
014->0148
01480[label="type
int"]
0148->01480
01481[label="Identifier
aux07"]
0148->01481
0149[label="varDeclaration
intj;"]
014->0149
01490[label="type
int"]
0149->01490
01491[label="Identifier
j"]
0149->01491
01410[label="varDeclaration
intt;"]
014->01410
014100[label="type
int"]
01410->014100
014101[label="Identifier
t"]
01410->014101
01411[label="statement
i=size-1;"]
014->01411
014110[label="Identifier
i"]
01411->014110
014111[label="expression
size-1"]
01411->014111
0141110[label="expression
size"]
014111->0141110
01411100[label="Identifier
size"]
0141110->01411100
0141111[label="expression
1"]
014111->0141111
01411110[label="INT
1"]
0141111->01411110
01412[label="statement
aux02=0-1;"]
014->01412
014120[label="Identifier
aux02"]
01412->014120
014121[label="expression
0-1"]
01412->014121
0141210[label="expression
0"]
014121->0141210
01412100[label="INT
0"]
0141210->01412100
0141211[label="expression
1"]
014121->0141211
01412110[label="INT
1"]
0141211->01412110
01413[label="statement
while(aux02<i){j=1;while(j<(i+1)){aux07=j-1;aux04=number[aux07];aux05=number[j];if(aux05<aux04){aux06=j-1;t=number[aux06];number[aux06]=number[j];number[j]=t;}elsent=0;j=j+1;}i=i-1;}"]
014->01413
014130[label="expression
aux02<i"]
01413->014130
0141300[label="expression
aux02"]
014130->0141300
01413000[label="Identifier
aux02"]
0141300->01413000
0141301[label="expression
i"]
014130->0141301
01413010[label="Identifier
i"]
0141301->01413010
014131[label="statement
{j=1;while(j<(i+1)){aux07=j-1;aux04=number[aux07];aux05=number[j];if(aux05<aux04){aux06=j-1;t=number[aux06];number[aux06]=number[j];number[j]=t;}elsent=0;j=j+1;}i=i-1;}"]
01413->014131
0141310[label="statement
j=1;"]
014131->0141310
01413100[label="Identifier
j"]
0141310->01413100
01413101[label="expression
1"]
0141310->01413101
014131010[label="INT
1"]
01413101->014131010
0141311[label="statement
while(j<(i+1)){aux07=j-1;aux04=number[aux07];aux05=number[j];if(aux05<aux04){aux06=j-1;t=number[aux06];number[aux06]=number[j];number[j]=t;}elsent=0;j=j+1;}"]
014131->0141311
01413110[label="expression
j<(i+1)"]
0141311->01413110
014131100[label="expression
j"]
01413110->014131100
0141311000[label="Identifier
j"]
014131100->0141311000
014131101[label="expression
(i+1)"]
01413110->014131101
0141311010[label="expression
i+1"]
014131101->0141311010
01413110100[label="expression
i"]
0141311010->01413110100
014131101000[label="Identifier
i"]
01413110100->014131101000
01413110101[label="expression
1"]
0141311010->01413110101
014131101010[label="INT
1"]
01413110101->014131101010
01413111[label="statement
{aux07=j-1;aux04=number[aux07];aux05=number[j];if(aux05<aux04){aux06=j-1;t=number[aux06];number[aux06]=number[j];number[j]=t;}elsent=0;j=j+1;}"]
0141311->01413111
014131110[label="statement
aux07=j-1;"]
01413111->014131110
0141311100[label="Identifier
aux07"]
014131110->0141311100
0141311101[label="expression
j-1"]
014131110->0141311101
01413111010[label="expression
j"]
0141311101->01413111010
014131110100[label="Identifier
j"]
01413111010->014131110100
01413111011[label="expression
1"]
0141311101->01413111011
014131110110[label="INT
1"]
01413111011->014131110110
014131111[label="statement
aux04=number[aux07];"]
01413111->014131111
0141311110[label="Identifier
aux04"]
014131111->0141311110
0141311111[label="expression
number[aux07]"]
014131111->0141311111
01413111110[label="expression
number"]
0141311111->01413111110
014131111100[label="Identifier
number"]
01413111110->014131111100
01413111111[label="expression
aux07"]
0141311111->01413111111
014131111110[label="Identifier
aux07"]
01413111111->014131111110
014131112[label="statement
aux05=number[j];"]
01413111->014131112
0141311120[label="Identifier
aux05"]
014131112->0141311120
0141311121[label="expression
number[j]"]
014131112->0141311121
01413111210[label="expression
number"]
0141311121->01413111210
014131112100[label="Identifier
number"]
01413111210->014131112100
01413111211[label="expression
j"]
0141311121->01413111211
014131112110[label="Identifier
j"]
01413111211->014131112110
014131113[label="statement
if(aux05<aux04){aux06=j-1;t=number[aux06];number[aux06]=number[j];number[j]=t;}elsent=0;"]
01413111->014131113
0141311130[label="expression
aux05<aux04"]
014131113->0141311130
01413111300[label="expression
aux05"]
0141311130->01413111300
014131113000[label="Identifier
aux05"]
01413111300->014131113000
01413111301[label="expression
aux04"]
0141311130->01413111301
014131113010[label="Identifier
aux04"]
01413111301->014131113010
0141311131[label="statement
{aux06=j-1;t=number[aux06];number[aux06]=number[j];number[j]=t;}"]
014131113->0141311131
01413111310[label="statement
aux06=j-1;"]
0141311131->01413111310
014131113100[label="Identifier
aux06"]
01413111310->014131113100
014131113101[label="expression
j-1"]
01413111310->014131113101
0141311131010[label="expression
j"]
014131113101->0141311131010
01413111310100[label="Identifier
j"]
0141311131010->01413111310100
0141311131011[label="expression
1"]
014131113101->0141311131011
01413111310110[label="INT
1"]
0141311131011->01413111310110
01413111311[label="statement
t=number[aux06];"]
0141311131->01413111311
014131113110[label="Identifier
t"]
01413111311->014131113110
014131113111[label="expression
number[aux06]"]
01413111311->014131113111
0141311131110[label="expression
number"]
014131113111->0141311131110
01413111311100[label="Identifier
number"]
0141311131110->01413111311100
0141311131111[label="expression
aux06"]
014131113111->0141311131111
01413111311110[label="Identifier
aux06"]
0141311131111->01413111311110
01413111312[label="statement
number[aux06]=number[j];"]
0141311131->01413111312
014131113120[label="Identifier
number"]
01413111312->014131113120
014131113121[label="expression
aux06"]
01413111312->014131113121
0141311131210[label="Identifier
aux06"]
014131113121->0141311131210
014131113122[label="expression
number[j]"]
01413111312->014131113122
0141311131220[label="expression
number"]
014131113122->0141311131220
01413111312200[label="Identifier
number"]
0141311131220->01413111312200
0141311131221[label="expression
j"]
014131113122->0141311131221
01413111312210[label="Identifier
j"]
0141311131221->01413111312210
01413111313[label="statement
number[j]=t;"]
0141311131->01413111313
014131113130[label="Identifier
number"]
01413111313->014131113130
014131113131[label="expression
j"]
01413111313->014131113131
0141311131310[label="Identifier
j"]
014131113131->0141311131310
014131113132[label="expression
t"]
01413111313->014131113132
0141311131320[label="Identifier
t"]
014131113132->0141311131320
0141311132[label="statement
nt=0;"]
014131113->0141311132
01413111320[label="Identifier
nt"]
0141311132->01413111320
01413111321[label="expression
0"]
0141311132->01413111321
014131113210[label="INT
0"]
01413111321->014131113210
014131114[label="statement
j=j+1;"]
01413111->014131114
0141311140[label="Identifier
j"]
014131114->0141311140
0141311141[label="expression
j+1"]
014131114->0141311141
01413111410[label="expression
j"]
0141311141->01413111410
014131114100[label="Identifier
j"]
01413111410->014131114100
01413111411[label="expression
1"]
0141311141->01413111411
014131114110[label="INT
1"]
01413111411->014131114110
0141312[label="statement
i=i-1;"]
014131->0141312
01413120[label="Identifier
i"]
0141312->01413120
01413121[label="expression
i-1"]
0141312->01413121
014131210[label="expression
i"]
01413121->014131210
0141312100[label="Identifier
i"]
014131210->0141312100
014131211[label="expression
1"]
01413121->014131211
0141312110[label="INT
1"]
014131211->0141312110
01414[label="expression
0"]
014->01414
014140[label="INT
0"]
01414->014140
015[label="methodDeclaration
publicintPrint(){intj;j=0;while(j<(size)){System.out.println(number[j]);j=j+1;}return0;}"]
01->015
0150[label="type
int"]
015->0150
0151[label="Identifier
Print"]
015->0151
0152[label="varDeclaration
intj;"]
015->0152
01520[label="type
int"]
0152->01520
01521[label="Identifier
j"]
0152->01521
0153[label="statement
j=0;"]
015->0153
01530[label="Identifier
j"]
0153->01530
01531[label="expression
0"]
0153->01531
015310[label="INT
0"]
01531->015310
0154[label="statement
while(j<(size)){System.out.println(number[j]);j=j+1;}"]
015->0154
01540[label="expression
j<(size)"]
0154->01540
015400[label="expression
j"]
01540->015400
0154000[label="Identifier
j"]
015400->0154000
015401[label="expression
(size)"]
01540->015401
0154010[label="expression
size"]
015401->0154010
01540100[label="Identifier
size"]
0154010->01540100
01541[label="statement
{System.out.println(number[j]);j=j+1;}"]
0154->01541
015410[label="statement
System.out.println(number[j]);"]
01541->015410
0154100[label="expression
number[j]"]
015410->0154100
01541000[label="expression
number"]
0154100->01541000
015410000[label="Identifier
number"]
01541000->015410000
01541001[label="expression
j"]
0154100->01541001
015410010[label="Identifier
j"]
01541001->015410010
015411[label="statement
j=j+1;"]
01541->015411
0154110[label="Identifier
j"]
015411->0154110
0154111[label="expression
j+1"]
015411->0154111
01541110[label="expression
j"]
0154111->01541110
015411100[label="Identifier
j"]
01541110->015411100
01541111[label="expression
1"]
0154111->01541111
015411110[label="INT
1"]
01541111->015411110
0155[label="expression
0"]
015->0155
01550[label="INT
0"]
0155->01550
016[label="methodDeclaration
publicintInit(intsz){size=sz;number=newint[sz];number[0]=20;number[1]=7;number[2]=12;number[3]=18;number[4]=2;number[5]=11;number[6]=6;number[7]=9;number[8]=19;number[9]=5;return0;}"]
01->016
0160[label="type
int"]
016->0160
0161[label="Identifier
Init"]
016->0161
0162[label="type
int"]
016->0162
0163[label="Identifier
sz"]
016->0163
0164[label="statement
size=sz;"]
016->0164
01640[label="Identifier
size"]
0164->01640
01641[label="expression
sz"]
0164->01641
016410[label="Identifier
sz"]
01641->016410
0165[label="statement
number=newint[sz];"]
016->0165
01650[label="Identifier
number"]
0165->01650
01651[label="expression
newint[sz]"]
0165->01651
016510[label="expression
sz"]
01651->016510
0165100[label="Identifier
sz"]
016510->0165100
0166[label="statement
number[0]=20;"]
016->0166
01660[label="Identifier
number"]
0166->01660
01661[label="expression
0"]
0166->01661
016610[label="INT
0"]
01661->016610
01662[label="expression
20"]
0166->01662
016620[label="INT
20"]
01662->016620
0167[label="statement
number[1]=7;"]
016->0167
01670[label="Identifier
number"]
0167->01670
01671[label="expression
1"]
0167->01671
016710[label="INT
1"]
01671->016710
01672[label="expression
7"]
0167->01672
016720[label="INT
7"]
01672->016720
0168[label="statement
number[2]=12;"]
016->0168
01680[label="Identifier
number"]
0168->01680
01681[label="expression
2"]
0168->01681
016810[label="INT
2"]
01681->016810
01682[label="expression
12"]
0168->01682
016820[label="INT
12"]
01682->016820
0169[label="statement
number[3]=18;"]
016->0169
01690[label="Identifier
number"]
0169->01690
01691[label="expression
3"]
0169->01691
016910[label="INT
3"]
01691->016910
01692[label="expression
18"]
0169->01692
016920[label="INT
18"]
01692->016920
01610[label="statement
number[4]=2;"]
016->01610
016100[label="Identifier
number"]
01610->016100
016101[label="expression
4"]
01610->016101
0161010[label="INT
4"]
016101->0161010
016102[label="expression
2"]
01610->016102
0161020[label="INT
2"]
016102->0161020
01611[label="statement
number[5]=11;"]
016->01611
016110[label="Identifier
number"]
01611->016110
016111[label="expression
5"]
01611->016111
0161110[label="INT
5"]
016111->0161110
016112[label="expression
11"]
01611->016112
0161120[label="INT
11"]
016112->0161120
01612[label="statement
number[6]=6;"]
016->01612
016120[label="Identifier
number"]
01612->016120
016121[label="expression
6"]
01612->016121
0161210[label="INT
6"]
016121->0161210
016122[label="expression
6"]
01612->016122
0161220[label="INT
6"]
016122->0161220
01613[label="statement
number[7]=9;"]
016->01613
016130[label="Identifier
number"]
01613->016130
016131[label="expression
7"]
01613->016131
0161310[label="INT
7"]
016131->0161310
016132[label="expression
9"]
01613->016132
0161320[label="INT
9"]
016132->0161320
01614[label="statement
number[8]=19;"]
016->01614
016140[label="Identifier
number"]
01614->016140
016141[label="expression
8"]
01614->016141
0161410[label="INT
8"]
016141->0161410
016142[label="expression
19"]
01614->016142
0161420[label="INT
19"]
016142->0161420
01615[label="statement
number[9]=5;"]
016->01615
016150[label="Identifier
number"]
01615->016150
016151[label="expression
9"]
01615->016151
0161510[label="INT
9"]
016151->0161510
016152[label="expression
5"]
01615->016152
0161520[label="INT
5"]
016152->0161520
01616[label="expression
0"]
016->01616
016160[label="INT
0"]
01616->016160
02[label="EOF
<EOF>"]
0->02
}
